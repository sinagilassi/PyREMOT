[2.74429938e-05 9.66842161e-06 4.70086821e-06 5.48260111e-06
 3.28984317e-06 2.99633815e-06][1.37214969e-05 4.83421080e-06 2.35043411e-06 2.74130055e-06
 1.64492159e-06 1.49816907e-06]
 
 [9.44735269e-06 3.04187654e-06 1.98667059e-06 3.15347496e-06
 1.37734261e-06 1.24873166e-06][9.44735269e-06 3.04187654e-06 1.98667059e-06 3.15347496e-06
 1.37734261e-06 1.24873166e-06]

 # check BC
                if z == 0:
                    # BC1
                    constC_BC1 = 2*dz*v_z[z]*zRef/-GaDii[i]
                    # fill matrix
                    # backward 0
                    _val_c = (-2*const_C_beta - const_C_gamma) - \
                        constC_BC1*(-const_C_alpha + const_C_beta)
                    _val_f = 2*const_C_alpha
                    # coupled
                    _val_coupled = const_C_gamma
                    # constant/nonlinear term
                    _val_constant = - constC_BC1 * \
                        (-const_C_alpha + const_C_beta)*SpCoi0[i]
                    # sum
                    _val_sum = _val_c*Ci_c + _val_f*Ci_f + \
                        _val_coupled*CosSpi_cat[i] + _val_constant
                    # dxdzMat[i][0][z] = _val_sum
                elif z == zNo - 1:
                    # BC2
                    # fill matrix
                    _val_b = 2*const_C_beta
                    _val_c = -2*const_C_beta - const_C_gamma
                    # forward 0
                    # coupled
                    _val_coupled = const_C_gamma
                    # sum
                    _val_sum = _val_b*Ci_b + _val_c*Ci_c + \
                        _val_coupled*CosSpi_cat[i]
                    # dxdzMat[i][0][z] = _val_sum
                else:
                    # interior points
                    # forward
                    Ci_f = SpCoi_z[i][z+1]
                    # interior nodes
                    Ci_b = SpCoi_z[i][z-1]

                    # fill matrix
                    _val_b = -const_C_alpha + const_C_beta
                    _val_c = -2*const_C_beta - const_C_gamma
                    _val_f = const_C_alpha + const_C_beta
                    # coupled
                    _val_coupled = const_C_gamma
                    # sum
                    _val_sum = _val_b*Ci_b + _val_c*Ci_c + \
                        _val_f*Ci_f + _val_coupled*CosSpi_cat[i]
                    # dxdzMat[i][0][z] = _val_sum

                # set
                dxdzMat[i][0][z] = _val_sum